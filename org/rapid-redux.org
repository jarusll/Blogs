#+title: Redux Primer
#+date: 2022-06-04 
#+draft: true
#+filetags: solution

* Redux primer

  What do you start with?
  - Actions

  What are =Actions=?
  - User interactable actions
  - Events in the application logic

  What does an action look like?
  - Its a javascript object
    #+BEGIN_SRC json
{
    "type": String,
    "payload": JSONValue
}
    #+END_SRC

  - The =type= is a string constant typically representing an action name
  - The =payload= is the data associated with the action event

  Eg
  #+BEGIN_SRC json
{
    "type": "ADD_POST",
    "payload": {
	"tags": ["primer"]
	"text": "What do you start with?..."
    }
}
  #+END_SRC

  Would it be convenient if we had helper functions to create the action objects?
  - Yes, they are called action creators

    #+BEGIN_SRC javascript
function addPost({tags, text}){
    return {
	tags,
	text
    }
}
    #+END_SRC

  How about the action names?
  - We can define them as constants 

    #+BEGIN_SRC javascript
const ADD_POST = "ADD_POST" 
    #+END_SRC

  Whats the next step?
  - =Reducers=

  What are reducers?
  - Reducers manage your state using =prevstate= and =action= to give you =nextstate=

  - =PrevState + Action => NextState=

  What do they look like?
  - Here's a trivial example of a reducer
    #+BEGIN_SRC javascript
const initialState = 0
function counterReducer(state = initialState, action){
    switch(action.type){
    case "INCREMENT":
	return state + 1
    case "DECREMENT":
	return state - 1
    default:
	return state
    }
}
    #+END_SRC

  How to decide what reducers to make?
  - Every reducer in the store(global state) is associated with a key

  Eg - The value returned by =counterReducer= will be associated with key =count= in global state.
  #+BEGIN_SRC json
{
    "count": counterReducer
}
  #+END_SRC

  - So one good way to figure out the reducers is by determining the states you will access.

  Whats the next part?
  - =Store=

  Whats a store?
  - The store is the global state

  How do you make a store?

  const store = redux.createStore(rootReducer)

  What is rootReducer?
  - All reducers combined as 1 reducer

  How do you combine reducers?
  - Reducers available = =[red1, red2, ...]=
    #+BEGIN_SRC javascript
const rootReducer = redux.combineReducers({
    key1: red1,
    key2: red2,
    ...
})
    #+END_SRC

  How do you change state?
  - By dispatching actions
    #+BEGIN_SRC javascript
store.dispatch(addPost({
    "tags": ["primer"]
    "text": "What do you start with?..."
})    
    #+END_SRC
